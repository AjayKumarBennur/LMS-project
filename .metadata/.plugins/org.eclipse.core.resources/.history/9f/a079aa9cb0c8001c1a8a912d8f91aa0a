package com.ajay.lms.service;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Optional;

import javax.management.RuntimeErrorException;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.ajay.lms.dto.DropDownResponse;
import com.ajay.lms.pojo.BatchDetails;
import com.ajay.lms.pojo.Employee;
import com.ajay.lms.pojo.Mentor;
import com.ajay.lms.pojo.Mock;
import com.ajay.lms.pojo.MockRatings;
import com.ajay.lms.pojo.Technologies;
import com.ajay.lms.repo.BatchDetailsRepo;
import com.ajay.lms.repo.EmployeeRepo;
import com.ajay.lms.repo.MentorRepo;
import com.ajay.lms.repo.MockRatingsRepo;
import com.ajay.lms.repo.MockRepo;

@Service
public class MetnorServiceImpl implements MentorService{

	@Autowired
	private EmployeeRepo empRepo;
	
	@Autowired
	private MentorRepo mentorRepo;
	
	@Autowired
	private BatchDetailsRepo batchDetailsRepo;
	
	@Autowired
	private MockRepo mockRepo;
	
	@Autowired
	private MockRatingsRepo mockRatingsRepo;
	
	@Override
	public List<Employee> getAllEmployee(String batchName) {
		System.out.println("id---------------->"+batchDetailsRepo.findIdByBatchName(batchName));
		BatchDetails batch = batchDetailsRepo.findIdByBatchName(batchName);
		if(batch==null) {
			throw new RuntimeException();
		}
		return batch.getEmployees();
	}

	@Override
	public List<MockRatings> getEmployeeDetails(String empId) {
		Employee empDetails = empRepo.findByEmpId(empId);
		if(empDetails==null) {
			throw new RuntimeException("Emp id doesnot exist");
		}
		if (empDetails.getRatings().size()<1) {
			throw new RuntimeException("No Ratings for empId");
		}
		return empDetails.getRatings();
	}

	@Override
	public Mock createMock(Mock mock) {
		Mock save = mockRepo.save(mock);
		if(save==null) {
			throw new RuntimeException();
		}
		return save;
		
	}

	@Override
	public MockRatings giveMockRatings(MockRatings ratings) {
		MockRatings mockRatings = mockRatingsRepo.save(ratings);
		if(mockRatings==null) {
			throw new RuntimeException();
		}
		return mockRatings;
	}

	@Override
	{
		  "id": 0,
		  "empId": "1",
		  "empName": "Akshay",
		  "doj": "2022/12/12",
		  "dob": "1996/05/10",
		  "email": "akshaybennur@gmail.com",
		  "bloodGroup": "AB+",
		  "designation": "Software Developer",
		  "gender": "Male",
		  "nationality": "Indain",
		  "status": "Active",
		  "info": {
		    "id": 0,
		    "panNo": "DKFPA8797G",
		    "adharNo": "690486070431",
		    "fatherName": "Annarao",
		    "motherName": "Nirmala",
		    "spouseName": "",
		    "passportNo": "",
		    "martialStatus": "Single"
		  },
		  "details": [
		    {
		      "id": 0,
		      "educationType": "Degree",
		      "date": "10/10/2019",
		      "percentage": 75.1,
		      "universityName": "VTU",
		      "instituteName": "PDA",
		      "specialization": "Mechnical",
		      "state": "Karnataka"
		    }
		  ],
		  "address": [
		    {
		      "id": 0,
		      "addType": "Permanent",
		      "doorNo": 91,
		      "street": "Shahbazar",
		      "locality": "Indian",
		      "city": "Kalaburgi",
		      "state": "Karnataka",
		      "pincode": 585101,
		      "landmark": "Lal Hanuman Temple"
		    }
		  ],
		  "bankDetails": {
		    "id": 0,
		    "accountNo": 123414,
		    "bankName": "ICICI",
		    "bankType": "Savings",
		    "ifscCode": "AHAH123123",
		    "branch": "Banglore",
		    "state": "Karanataka"
		  },
		  "tech": [
		    {
		      "id": 0,
		      "tech": "Java"
		    }
		  ],
		  "exp": [
		    {
		      "id": 0,
		      "companyName": "string",
		      "eop": 0,
		      "doj": "20/12/2022",
		      "dor": "21/12/2024",
		      "designation": "Associate Software",
		      "location": "Banglore"
		    }
		  ],
		  "contact": [
		    {
		      "id": 0,
		      "contactType": "Personal",
		      "contactNumber": 9538717375
		    }
		  ],
		  "ratings": [
		    {
		      "id": 0,
		      "mockType": "string",
		      "mockTakenBy": "string",
		      "tech": {
		        "id": 0,
		        "tech": "string"
		      },
		      "practical": 0,
		      "therotical": 0,
		      "overAll": 0,
		      "detailedFeedBack": "string",
		      "employee": "string"
		    }
		  ]
		}
	
}
